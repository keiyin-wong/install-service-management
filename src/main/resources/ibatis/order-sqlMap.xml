<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Order">
	<resultMap id="orderResultMap" class="com.keiyin.ism.model.Order">
		<result property="id" column="id" javaType="String"/>
		<result property="date" column="date" javaType="Date"/>
	</resultMap>
	
	<resultMap id="orderAndTotalResultMap" class="com.keiyin.ism.model.Order">
		<result property="id" column="id" javaType="String"/>
		<result property="date" column="date" javaType="Date"/>
		<result property="total" column="total_price" javaType="Integer"/>
	</resultMap>
	
	<resultMap id="orderDetailResultMap" class="com.keiyin.ism.model.OrderDetail">
		<result property="orderId" column="order_id" javaType="String"/>
		<result property="lineNumber" column="line_number" javaType="int"/>
		<result property="serviceId" column="service_id" javaType="int"/>
		<result property="serviceName" column="service_name" javaType="String"/>
		<result property="description" column="description" javaType="String"/>
		<result property="width" column="width" javaType="double"/>
		<result property="height" column="height" javaType="double"/>
		<result property="quantity" column="quantity" javaType="int"/>
		<result property="finalPrice" column="final_price" javaType="int"/>
		<result property="totalPrice" column="total_price" javaType="int"/>
		<result property="useQuantity" column="use_quantity" javaType="boolean"/>
	</resultMap>

	<select id="datatableOrderList" resultMap="orderAndTotalResultMap">
		SELECT * 
		FROM
		(
		SELECT
		o.id AS id,
		o.date AS `date`,
		COALESCE(SUM(
			CASE
			WHEN s.use_quantity=1 THEN od.final_price * od.quantity
			ELSE TRUNCATE(ROUND((od.width/304.8),2) * od.final_price, 0)
			END
		),0) AS total_price
		FROM `order` o
		LEFT JOIN `order_detail` od ON o.id = od.order_id
		LEFT JOIN `service` s ON s.id = od.service_id
		GROUP BY o.id
		) a
		<dynamic prepend="WHERE">
			<isNotNull property="searchParameter">
				id LIKE '%$searchParameter$%' 
			</isNotNull>
		</dynamic>
		<isNotNull property="orderClause">
    		$orderClause$
  		</isNotNull>
		<isNotNull property="start_row">
            <isNotNull property="limit_page">
    			LIMIT #start_row#, #limit_page#
   			</isNotNull>
  		</isNotNull>
	</select>
	
	<select id="getOrder" resultMap="orderResultMap" parameterClass="java.util.HashMap">
		SELECT * FROM `order`
		<dynamic prepend="WHERE">
			<isNotNull property="orderId">
				id = '$orderId$' 
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getOrderListCount" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		SELECT COUNT(*) FROM `order`
		<dynamic prepend="WHERE">
			<isNotNull property="searchParameter">
				id LIKE '%$searchParameter$%' 
			</isNotNull>
		</dynamic>
	</select>
	
	<select id="getLastOrderId" resultClass="String">
		SELECT CAST(MAX(id)+1 AS INT) FROM `order` 
	</select>
	
	<insert id="insertOrder" parameterClass="java.util.HashMap">
		INSERT INTO `order` (`id`, `date`) VALUES ('$orderId$', '$orderDate$');
	</insert>
	
	<update id="updateOrder" parameterClass="java.util.HashMap">
		UPDATE 
			`order` 
		SET 
			`date` = '$orderDate$'
		WHERE
			`id` = '$orderId$'
	</update>
	
	<delete id="deleteOrder" parameterClass="java.util.HashMap">
		DELETE FROM
			`order`
		WHERE
			`id` = '$orderId$'
	</delete>
	
	<select id="getOrderDetailList" resultMap="orderDetailResultMap" parameterClass="String">
		SELECT 
		od.order_id AS order_id,
		od.line_number AS line_number,
		od.service_id AS service_id,
		od.description AS `description`,
		od.width AS width,
		od.height AS height,
		od.quantity AS quantity,
		od.final_price AS final_price,
		s.use_quantity AS use_quantity, 
		ROUND((od.width/304.8),2) AS ft,
		(
		CASE
			WHEN (s.description_english IS NOT NULL AND s.description_english !="") AND (s.description_chinese IS NOT NULL AND s.description_chinese != "")
				THEN CONCAT(s.description_english, " (" ,s.description_chinese, ")")
			WHEN (s.description_english IS NOT NULL AND s.description_english !="") AND (s.description_chinese IS NULL OR s.description_chinese = "")
				THEN CONCAT(s.description_english)
			WHEN (s.description_english IS NULL OR s.description_english ="") AND (s.description_chinese IS NOT NULL AND s.description_chinese != "")
				THEN CONCAT(s.description_chinese)
			
			ELSE ""
			END
		) AS service_name,
		(
		CASE
			WHEN s.use_quantity=1 THEN od.final_price * od.quantity
			ELSE TRUNCATE(ROUND((od.width/304.8),2) * od.final_price, 0)
			END
		) AS total_price
		FROM `order` o
		JOIN order_detail od ON o.id = od.order_id
		JOIN service s ON s.id = od.service_id
		WHERE od.order_id = '$orderId$'
		ORDER BY order_id, line_number ASC;
	</select>
	
	<select id="getOrderDetail" resultMap="orderDetailResultMap" parameterClass="java.util.HashMap">
		SELECT 
		od.order_id AS order_id,
		od.line_number AS line_number,
		od.service_id AS service_id,
		od.description AS `description`,
		od.width AS width,
		od.height AS height,
		od.quantity AS quantity,
		od.final_price AS final_price,
		s.use_quantity AS use_quantity, 
		ROUND((od.width/304.8),2) AS ft,
		(
		CASE
			WHEN (s.description_english IS NOT NULL AND s.description_english !="") AND (s.description_chinese IS NOT NULL AND s.description_chinese != "")
				THEN CONCAT(s.description_english, " (" ,s.description_chinese, ")")
			WHEN (s.description_english IS NOT NULL AND s.description_english !="") AND (s.description_chinese IS NULL OR s.description_chinese = "")
				THEN CONCAT(s.description_english)
			WHEN (s.description_english IS NULL OR s.description_english ="") AND (s.description_chinese IS NOT NULL AND s.description_chinese != "")
				THEN CONCAT(s.description_chinese)
			
			ELSE ""
			END
		) AS service_name,
		(
		CASE
			WHEN s.use_quantity=1 THEN od.final_price * od.quantity
			ELSE TRUNCATE(ROUND((od.width/304.8),2) * od.final_price, 0)
			END
		) AS total_price
		FROM `order` o
		JOIN order_detail od ON o.id = od.order_id
		JOIN service s ON s.id = od.service_id
		WHERE od.order_id = '$orderId$' AND od.line_number=#lineNumber#
		ORDER BY order_id, line_number ASC;
	</select>
	
	<insert id="insertOrderDetail" parameterClass="java.util.HashMap">
		INSERT INTO 
		order_detail (order_id, line_number, service_id, `description`, 
		<isNotNull property="createWidth">
			width, 
		</isNotNull>
		<isNotNull property="createHeight">
			height, 
		</isNotNull>
		<isNotNull property="createQuantity">
			quantity, 
		</isNotNull>
		final_price)
		SELECT
		'$orderId$', 
		COALESCE (MAX(line_number), 0) + 1 AS line_number,
		$createService$,
		'$createDescription$',
		<isNotNull property="createWidth">
			$createWidth$, 
		</isNotNull>
		<isNotNull property="createHeight">
			$createHeight$, 
		</isNotNull>
		<isNotNull property="createQuantity">
			$createQuantity$, 
		</isNotNull>
		$createPriceSen$
		FROM `order_detail`
		WHERE order_id = '$orderId$'; 
	</insert>
	
	<update id="updateOrderDetail" parameterClass="java.util.HashMap">
		UPDATE `order_detail`
		SET
		service_id = $editService$,
		`description` = '$editDescription$',
		<isNotNull property="editWidth">
			width = $editWidth$,
		</isNotNull>
		<isNotNull property="editHeight">
			height = $editHeight$,
		</isNotNull>
		<isNotNull property="editQuantity">
			quantity = $editQuantity$,
		</isNotNull>
		final_price = $editPriceSen$
		WHERE
		order_id = '$orderId$'
		AND line_number = $editLineNumber$;
	</update>
	
	<delete id="deleteOrderDetail" parameterClass="java.util.HashMap">
		DELETE FROM
			`order_detail`
		WHERE
			`order_id` = '$orderId$' AND `line_number` = $lineNumber$
	</delete>
</sqlMap>